//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"

namespace Manntall.Backend.Folkeregister.Integration
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FolkeregisterClient
    {
        private string _baseUrl = "/";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<Newtonsoft.Json.JsonSerializerSettings> _settings;

        public FolkeregisterClient(System.Net.Http.HttpClient httpClient)
        {
            _httpClient = httpClient;
            _settings = new System.Lazy<Newtonsoft.Json.JsonSerializerSettings>(CreateSerializerSettings, true);
        }

        private Newtonsoft.Json.JsonSerializerSettings CreateSerializerSettings()
        {
            var settings = new Newtonsoft.Json.JsonSerializerSettings();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected Newtonsoft.Json.JsonSerializerSettings JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(Newtonsoft.Json.JsonSerializerSettings settings);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Henter lagrede hendelser fra rettighetspakke.
        /// </summary>
        /// <param name="seq">Fra hvilket sekvensnummer (inklusivt) man ønsker å hente registerhendelser.</param>
        /// <returns>Returnerer en liste med lagrede hendelser</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<LagretTynnHendelse>> HentFeedSideAsync(long seq, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            if (seq == null)
                throw new System.ArgumentNullException("seq");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/offentligutenhjemmel/v1/hendelser/feed?");
            urlBuilder_.Append(System.Uri.EscapeDataString("seq") + "=").Append(System.Uri.EscapeDataString(ConvertToString(seq, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/atom+xml"));

                    await PrepareRequestAsync(client_, request_, urlBuilder_, cancellationToken).ConfigureAwait(false);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    await PrepareRequestAsync(client_, request_, url_, cancellationToken).ConfigureAwait(false);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        await ProcessResponseAsync(client_, response_, cancellationToken).ConfigureAwait(false);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<LagretTynnHendelse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 304)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Ikke Endret. Innholdet er ikke endret siden ETag versjonen sendt inn i If-None-Match (se https://en.wikipedia.org/wiki/HTTP_ETag#Typical_usage)", status_, responseText_, headers_, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Ugyldig parameter.", status_, responseText_, headers_, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Autentisering feiler.", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 403)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Ugyldig tilgang.", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ErrorMessageForExternalUsers>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ErrorMessageForExternalUsers>("Ikke funnet.", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 429)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("For mange kall er gjort p\u00e5 kort tid. Vent i minimum antall ms oppgitt i Retry-After header f\u00f8r neste request utf\u00f8res.", status_, responseText_, headers_, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Hent XSD for feed
        /// </summary>
        /// <returns>default response</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<FileResponse> GetFeedXsdAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/offentligutenhjemmel/v1/hendelser/feedxsd");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    await PrepareRequestAsync(client_, request_, urlBuilder_, cancellationToken).ConfigureAwait(false);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    await PrepareRequestAsync(client_, request_, url_, cancellationToken).ConfigureAwait(false);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        await ProcessResponseAsync(client_, response_, cancellationToken).ConfigureAwait(false);

                        var status_ = (int)response_.StatusCode;
                        return default(FileResponse)!;
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Henter siste persisterte sekvensnummer i feed
        /// </summary>
        /// <returns>Returnerer siste persisterte sekvensnummer</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<long> SisteSekvensnummerIFeedAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/offentligutenhjemmel/v1/hendelser/siste/sekvensnummer");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    await PrepareRequestAsync(client_, request_, urlBuilder_, cancellationToken).ConfigureAwait(false);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    await PrepareRequestAsync(client_, request_, url_, cancellationToken).ConfigureAwait(false);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        await ProcessResponseAsync(client_, response_, cancellationToken).ConfigureAwait(false);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<long>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Autentisering feiler.", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 403)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Ugyldig tilgang.", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Henter persondata for et sett med personer.
        /// </summary>
        /// <param name="part">Hent ut et utsnitt av personen. Spesifiser hvilke entiteter som skal hentes ut. F.eks. identifikasjonsnummer og identitetsgrunnlag.</param>
        /// <param name="somBestilt">Henter personer i den rekkefølge de kommer i requestet. Evt. duplikate identifikatorer vil gi duplikate treff. For utgåtte identifikatorer eller identifikatorer som ikke finnes vil man få feilmelding i responsen istedet for persondata.</param>
        /// <returns>Returnerer en liste av oppslag.</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<PersonBulkoppslagResponse> HentPersonerAsync(System.Collections.Generic.IEnumerable<string>? part = null, bool? somBestilt = null, PersonBulkoppslagRequest? body = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/offentligutenhjemmel/v1/personer/bulkoppslag?");
            if (part != null)
            {
                foreach (var item_ in part) { urlBuilder_.Append(System.Uri.EscapeDataString("part") + "=").Append(System.Uri.EscapeDataString(ConvertToString(item_, System.Globalization.CultureInfo.InvariantCulture))).Append("&"); }
            }
            if (somBestilt != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("somBestilt") + "=").Append(System.Uri.EscapeDataString(ConvertToString(somBestilt, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = Newtonsoft.Json.JsonConvert.SerializeObject(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    await PrepareRequestAsync(client_, request_, urlBuilder_, cancellationToken).ConfigureAwait(false);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    await PrepareRequestAsync(client_, request_, url_, cancellationToken).ConfigureAwait(false);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        await ProcessResponseAsync(client_, response_, cancellationToken).ConfigureAwait(false);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<PersonBulkoppslagResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Ugyldig parameter.", status_, responseText_, headers_, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Autentisering feiler.", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 403)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Ugyldig tilgang.", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 429)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("For mange kall er gjort p\u00e5 kort tid. Vent i minimum antall ms oppgitt i Retry-After header f\u00f8r neste request utf\u00f8res.", status_, responseText_, headers_, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Henter oppdaterte data om en person basert på entydig identifiserende opplysninger.
        /// </summary>
        /// <remarks>
        /// Minimumskrav til bruk av entydig søk er definert her: https://skatteetaten.github.io/folkeregisteret-api-dokumentasjon/oppslag/
        /// <br/>. Evt. identifiserende adresse må innbefatte minst (adressenavn + husnummer/bokstav) eller (adressenavn + postnummer).  Treffet kan smalnes inn ved å oppgi ytterligere kriterier. Hvis kriteriene til sammen er entydig identifiserende returneres personen. Ved null treff eller mer enn ett treff returneres 404 (NOT FOUND).
        /// </remarks>
        /// <param name="identifikasjonsnummer">Fødsels- eller d-nummer, 11 siffer. Treffer både gjeldende og historiske opplysninger, uavhengig av parameter 'opplysingsgrunnlag'.</param>
        /// <param name="foedselsdato">Fødselsdato (YYYYMMDD)</param>
        /// <param name="navn">Minst to delnavn skilt med mellomrom. Første ord må treffe et helt ord fornavnet. Siste ord må treffe et helt ord i etternavnet. Evt. andre ord må treffe hele ord i vilkårlige delnavn.Kan søke fonetisk ved bruk av parameter 'soekfonetisk'. Kan treffe historiske opplysninger ved bruk av parameter 'opplysningsgrunnlag'.</param>
        /// <param name="postnummer">Postnummer, 4 siffer. Kan treffe historiske opplysninger ved bruk av parameter 'opplysningsgrunnlag'.</param>
        /// <param name="adressenavn">Gatenavnet, eller minst 3 tegn fra begynnelsen av det. Kan treffe historiske opplysninger ved bruk av parameter 'opplysningsgrunnlag'.</param>
        /// <param name="husnummer">Husnummer, med eller uten bokstav. Bokstav eller fravær av den må stemme med personens adresse. Kan treffe historiske opplysninger ved bruk av parameter 'opplysningsgrunnlag'.</param>
        /// <param name="part">Hvilke opplysninger som skal hentes ut. Flere felter eller aliaser kan oppgis, f.eks. bostedsadresse og navn</param>
        /// <param name="soekfonetisk">Fonetisk søk på navn. Default er false. Påvirker ingen andre felter enn navn.</param>
        /// <param name="opplysningsgrunnlag">(gjeldende | historisk) Hvorvidt navn og adressefelter skal treffe kun gjeldende eller også historiske opplysninger.Default er 'gjeldende'.For alle andre opplysninger søkes det alltid kun på gjeldende, unntatt identifikasjonsnummer, der det alltid søkes på både gjeldende og historiske opplysninger.</param>
        /// <returns>Returnerer persondata</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<Folkeregisterperson> EntydigSoekAsync(string? identifikasjonsnummer = null, string? foedselsdato = null, string? navn = null, string? postnummer = null, string? adressenavn = null, string? husnummer = null, System.Collections.Generic.IEnumerable<string>? part = null, bool? soekfonetisk = null, string? opplysningsgrunnlag = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/offentligutenhjemmel/v1/personer/entydigsoek?");
            if (identifikasjonsnummer != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("identifikasjonsnummer") + "=").Append(System.Uri.EscapeDataString(ConvertToString(identifikasjonsnummer, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (foedselsdato != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("foedselsdato") + "=").Append(System.Uri.EscapeDataString(ConvertToString(foedselsdato, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (navn != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("navn") + "=").Append(System.Uri.EscapeDataString(ConvertToString(navn, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (postnummer != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("postnummer") + "=").Append(System.Uri.EscapeDataString(ConvertToString(postnummer, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (adressenavn != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("adressenavn") + "=").Append(System.Uri.EscapeDataString(ConvertToString(adressenavn, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (husnummer != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("husnummer") + "=").Append(System.Uri.EscapeDataString(ConvertToString(husnummer, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (part != null)
            {
                foreach (var item_ in part) { urlBuilder_.Append(System.Uri.EscapeDataString("part") + "=").Append(System.Uri.EscapeDataString(ConvertToString(item_, System.Globalization.CultureInfo.InvariantCulture))).Append("&"); }
            }
            if (soekfonetisk != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("soekfonetisk") + "=").Append(System.Uri.EscapeDataString(ConvertToString(soekfonetisk, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (opplysningsgrunnlag != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("opplysningsgrunnlag") + "=").Append(System.Uri.EscapeDataString(ConvertToString(opplysningsgrunnlag, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    await PrepareRequestAsync(client_, request_, urlBuilder_, cancellationToken).ConfigureAwait(false);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    await PrepareRequestAsync(client_, request_, url_, cancellationToken).ConfigureAwait(false);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        await ProcessResponseAsync(client_, response_, cancellationToken).ConfigureAwait(false);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<Folkeregisterperson>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Ugyldig parameter", status_, responseText_, headers_, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Autentisering feiler", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 403)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Ugyldig tilgang", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Ukjent person, eller ikke entydig treff", status_, responseText_, headers_, null);
                        }
                        else
                        if (status_ == 429)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("For mange kall er gjort p\u00e5 kort tid. Vent i minimum antall ms oppgitt i Retry-After header f\u00f8r neste request utf\u00f8res.", status_, responseText_, headers_, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Finner fnr/dnr til personer som oppfyller søkekriteriene
        /// </summary>
        /// <param name="navn">Et eller flere hele ord fra personnavnet, skilt med mellomrom.</param>
        /// <param name="kjoenn">'mann' eller 'kvinne'</param>
        /// <param name="foedselsdato">Fødselsdato (YYYYMMDD)</param>
        /// <param name="foedselsaarFraOgMed">Laveste fødselsår (4 siffer)</param>
        /// <param name="foedselsaarTilOgMed">Høyeste fødselsår (4 siffer)</param>
        /// <param name="adressenavn">Minst 3 tegn fra begynnelsen av gatenavn</param>
        /// <param name="husnummer">Husnummer, med eller uten bokstav</param>
        /// <param name="postnummer">Filtrerer treff på postnummer (4 siffer)</param>
        /// <param name="kommunenummer">Filtrerer treff på kommunenummer (4 siffer)</param>
        /// <param name="fylkesnummer">Filtrerer treff på fylkesnummer (2 siffer)</param>
        /// <param name="inkluderOppholdsadresse">Treffer oppholdsasdresse i tillegg til bostedsadresse. Default: false</param>
        /// <param name="soekFonetisk">Søk også på lignende navn. Default: false</param>
        /// <param name="inkluderDoede">Treffer også døde personer. Default: false</param>
        /// <param name="opplysningsgrunnlag">Styrer håndtering av historikk. En av ('gjeldende', 'historisk'). Default: 'gjeldende'. Påvirker kun navn og adresse - for andre opplysninger søkes det alltid kun på gjeldende.</param>
        /// <param name="maksTreff">Maksimalt antall treff å returnere.  Maks 10.000.</param>
        /// <returns>Returnerer en liste av fødsels-eller d-numre, kan være tom dersom søket ikke treffer noe</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<PersonsoekResponse> PersonsoekAsync(string? navn = null, string? kjoenn = null, string? foedselsdato = null, string? foedselsaarFraOgMed = null, string? foedselsaarTilOgMed = null, string? adressenavn = null, string? husnummer = null, string? postnummer = null, string? kommunenummer = null, string? fylkesnummer = null, bool? inkluderOppholdsadresse = null, bool? soekFonetisk = null, bool? inkluderDoede = null, string? opplysningsgrunnlag = null, int? maksTreff = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/offentligutenhjemmel/v1/personer/soek?");
            if (navn != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("navn") + "=").Append(System.Uri.EscapeDataString(ConvertToString(navn, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (kjoenn != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("kjoenn") + "=").Append(System.Uri.EscapeDataString(ConvertToString(kjoenn, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (foedselsdato != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("foedselsdato") + "=").Append(System.Uri.EscapeDataString(ConvertToString(foedselsdato, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (foedselsaarFraOgMed != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("foedselsaarFraOgMed") + "=").Append(System.Uri.EscapeDataString(ConvertToString(foedselsaarFraOgMed, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (foedselsaarTilOgMed != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("foedselsaarTilOgMed") + "=").Append(System.Uri.EscapeDataString(ConvertToString(foedselsaarTilOgMed, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (adressenavn != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("adressenavn") + "=").Append(System.Uri.EscapeDataString(ConvertToString(adressenavn, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (husnummer != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("husnummer") + "=").Append(System.Uri.EscapeDataString(ConvertToString(husnummer, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (postnummer != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("postnummer") + "=").Append(System.Uri.EscapeDataString(ConvertToString(postnummer, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (kommunenummer != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("kommunenummer") + "=").Append(System.Uri.EscapeDataString(ConvertToString(kommunenummer, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (fylkesnummer != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("fylkesnummer") + "=").Append(System.Uri.EscapeDataString(ConvertToString(fylkesnummer, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (inkluderOppholdsadresse != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("inkluderOppholdsadresse") + "=").Append(System.Uri.EscapeDataString(ConvertToString(inkluderOppholdsadresse, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (soekFonetisk != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("soekFonetisk") + "=").Append(System.Uri.EscapeDataString(ConvertToString(soekFonetisk, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (inkluderDoede != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("inkluderDoede") + "=").Append(System.Uri.EscapeDataString(ConvertToString(inkluderDoede, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (opplysningsgrunnlag != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("opplysningsgrunnlag") + "=").Append(System.Uri.EscapeDataString(ConvertToString(opplysningsgrunnlag, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (maksTreff != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("maksTreff") + "=").Append(System.Uri.EscapeDataString(ConvertToString(maksTreff, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    await PrepareRequestAsync(client_, request_, urlBuilder_, cancellationToken).ConfigureAwait(false);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    await PrepareRequestAsync(client_, request_, url_, cancellationToken).ConfigureAwait(false);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        await ProcessResponseAsync(client_, response_, cancellationToken).ConfigureAwait(false);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<PersonsoekResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Ugyldig parameter", status_, responseText_, headers_, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Autentisering feiler", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 403)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Ugyldig tilgang", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 406)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Ugyldig part.", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 429)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("For mange kall er gjort p\u00e5 kort tid. Vent i minimum antall ms oppgitt i Retry-After header f\u00f8r neste request utf\u00f8res.", status_, responseText_, headers_, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Hent XSD for person
        /// </summary>
        /// <returns>default response</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<FileResponse> GetXsdAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/offentligutenhjemmel/v1/personer/xsd");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    await PrepareRequestAsync(client_, request_, urlBuilder_, cancellationToken).ConfigureAwait(false);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    await PrepareRequestAsync(client_, request_, url_, cancellationToken).ConfigureAwait(false);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        await ProcessResponseAsync(client_, response_, cancellationToken).ConfigureAwait(false);

                        var status_ = (int)response_.StatusCode;
                        return default(FileResponse)!;
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Henter oppdaterte data om en person.
        /// </summary>
        /// <param name="personidentifikator">Fødsels- eller D-nummer</param>
        /// <param name="part">Hent ut bestemte opplysninger om personen, f.eks. identifikasjonsnummer og identitetsgrunnlag.</param>
        /// <returns>Returnerer persondata.</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<Folkeregisterperson> HentSisteVersjonAvPersonAsync(string personidentifikator, System.Collections.Generic.IEnumerable<string>? part = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            if (personidentifikator == null)
                throw new System.ArgumentNullException("personidentifikator");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/offentligutenhjemmel/v1/personer/{personidentifikator}?");
            urlBuilder_.Replace("{personidentifikator}", System.Uri.EscapeDataString(ConvertToString(personidentifikator, System.Globalization.CultureInfo.InvariantCulture)));
            if (part != null)
            {
                foreach (var item_ in part) { urlBuilder_.Append(System.Uri.EscapeDataString("part") + "=").Append(System.Uri.EscapeDataString(ConvertToString(item_, System.Globalization.CultureInfo.InvariantCulture))).Append("&"); }
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    await PrepareRequestAsync(client_, request_, urlBuilder_, cancellationToken).ConfigureAwait(false);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    await PrepareRequestAsync(client_, request_, url_, cancellationToken).ConfigureAwait(false);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        await ProcessResponseAsync(client_, response_, cancellationToken).ConfigureAwait(false);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<Folkeregisterperson>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Ugyldig parameter.", status_, responseText_, headers_, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Autentisering feiler.", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 403)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Ugyldig tilgang.", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Ukjent person.", status_, responseText_, headers_, null);
                        }
                        else
                        if (status_ == 406)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Ugyldig part.", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 429)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("For mange kall er gjort p\u00e5 kort tid. Vent i minimum antall ms oppgitt i Retry-After header f\u00f8r neste request utf\u00f8res.", status_, responseText_, headers_, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Lager en async tilpasset uttrekksjobb
        /// </summary>
        /// <returns>Returnerer en jobb id.</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<UttrekkJobbResponse> LagJobbAsync(TilpassetUttrekkJobbRequest? body = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/offentligutenhjemmel/v1/uttrekk/tilpasset");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = Newtonsoft.Json.JsonConvert.SerializeObject(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    await PrepareRequestAsync(client_, request_, urlBuilder_, cancellationToken).ConfigureAwait(false);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    await PrepareRequestAsync(client_, request_, url_, cancellationToken).ConfigureAwait(false);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        await ProcessResponseAsync(client_, response_, cancellationToken).ConfigureAwait(false);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<UttrekkJobbResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Ugyldig parameter.", status_, responseText_, headers_, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Autentisering feiler.", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 403)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Ugyldig tilgang.", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 429)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("For mange kall er gjort p\u00e5 kort tid. Vent i minimum antall ms oppgitt i Retry-After header f\u00f8r neste request utf\u00f8res.", status_, responseText_, headers_, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Henter identifikatorer for angitt jobb
        /// </summary>
        /// <returns>Returnerer liste med forespurte identifikatorer.</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<UttrekkDataResponse> HentBatchAsync(string jobbid, long batchnr, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            if (jobbid == null)
                throw new System.ArgumentNullException("jobbid");

            if (batchnr == null)
                throw new System.ArgumentNullException("batchnr");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/offentligutenhjemmel/v1/uttrekk/{jobbid}/batch/{batchnr}");
            urlBuilder_.Replace("{jobbid}", System.Uri.EscapeDataString(ConvertToString(jobbid, System.Globalization.CultureInfo.InvariantCulture)));
            urlBuilder_.Replace("{batchnr}", System.Uri.EscapeDataString(ConvertToString(batchnr, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    await PrepareRequestAsync(client_, request_, urlBuilder_, cancellationToken).ConfigureAwait(false);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    await PrepareRequestAsync(client_, request_, url_, cancellationToken).ConfigureAwait(false);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        await ProcessResponseAsync(client_, response_, cancellationToken).ConfigureAwait(false);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<UttrekkDataResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Ugyldig parameter.", status_, responseText_, headers_, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Autentisering feiler.", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 403)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FolkeregisterFeilmelding>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<FolkeregisterFeilmelding>("Ugyldig tilgang.", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<UttrekkDataResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<UttrekkDataResponse>("Jobb med jobbid er enda ikke ferdig, og batch med batch id finnes ikke", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 410)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<UttrekkDataResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<UttrekkDataResponse>("Jobb med jobbid eller batch med batch id eksisterer ikke", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 429)
                        {
                            string responseText_ = ( response_.Content == null ) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("For mange kall er gjort p\u00e5 kort tid. Vent i minimum antall ms oppgitt i Retry-After header f\u00f8r neste request utf\u00f8res.", status_, responseText_, headers_, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T)!, string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = Newtonsoft.Json.JsonConvert.DeserializeObject<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody!, responseText);
                }
                catch (Newtonsoft.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    using (var streamReader = new System.IO.StreamReader(responseStream))
                    using (var jsonTextReader = new Newtonsoft.Json.JsonTextReader(streamReader))
                    {
                        var serializer = Newtonsoft.Json.JsonSerializer.Create(JsonSerializerSettings);
                        var typedBody = serializer.Deserialize<T>(jsonTextReader);
                        return new ObjectResponseResult<T>(typedBody!, string.Empty);
                    }
                }
                catch (Newtonsoft.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object? value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[]) value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array) value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AdresseIFrittFormat
    {
        [Newtonsoft.Json.JsonProperty("adresselinje", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string>? Adresselinje { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("landkode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Landkode { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Adressenummer
    {
        [Newtonsoft.Json.JsonProperty("husbokstav", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Husbokstav { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("husnummer", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Husnummer { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AdvokatSomKontakt
    {
        [Newtonsoft.Json.JsonProperty("organisasjonsnavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Organisasjonsnavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("organisasjonsnummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Organisasjonsnummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("personnavn", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Personnavn Personnavn { get; set; } = new Personnavn();

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BegrensningIRettsligHandleevne
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BibeholdAvNorskStatsborgerskap
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("bibeholdstatus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public BibeholdAvNorskStatsborgerskapBibeholdstatus Bibeholdstatus { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("datoForBibehold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? DatoForBibehold { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Bostedsadresse
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adresseIdentifikatorFraMatrikkelen", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? AdresseIdentifikatorFraMatrikkelen { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adressegradering", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public BostedsadresseAdressegradering Adressegradering { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("flyttedato", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? Flyttedato { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("grunnkrets", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Grunnkrets { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kirkekrets", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Kirkekrets { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("matrikkeladresse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Matrikkeladresse? Matrikkeladresse { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("naerAdresseIdentifikatorFraMatrikkelen", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? NaerAdresseIdentifikatorFraMatrikkelen { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("skolekrets", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Skolekrets { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("stemmekrets", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Stemmekrets { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ukjentBosted", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public UkjentBosted? UkjentBosted { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("vegadresse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Vegadresse? Vegadresse { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeltBosted
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adresseIdentifikatorFraMatrikkelen", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? AdresseIdentifikatorFraMatrikkelen { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adressegradering", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public DeltBostedAdressegradering Adressegradering { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("matrikkeladresse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Matrikkeladresse? Matrikkeladresse { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("naerAdresseIdentifikatorFraMatrikkelen", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? NaerAdresseIdentifikatorFraMatrikkelen { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("sluttdatoForKontrakt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? SluttdatoForKontrakt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("startdatoForKontrakt", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime StartdatoForKontrakt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ukjentBosted", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public UkjentBosted? UkjentBosted { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("vegadresse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Vegadresse? Vegadresse { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Doedsfall
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("doedsdato", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? Doedsdato { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FalskIdentitet
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erFalsk", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErFalsk { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("rettIdentitetErUkjent", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? RettIdentitetErUkjent { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("rettIdentitetVedIdentifikasjonsnummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? RettIdentitetVedIdentifikasjonsnummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("rettIdentitetVedOpplysninger", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IdentifiserendeInformasjon? RettIdentitetVedOpplysninger { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Familierelasjon
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("minRolleForPerson", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public FamilierelasjonMinRolleForPerson? MinRolleForPerson { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("relatertPerson", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? RelatertPerson { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("relatertPersonUtenFolkeregisteridentifikator", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RelatertBiPerson? RelatertPersonUtenFolkeregisteridentifikator { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("relatertPersonsRolle", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public FamilierelasjonRelatertPersonsRolle RelatertPersonsRolle { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Foedsel
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("foedekommuneINorge", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? FoedekommuneINorge { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("foedeland", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Foedeland { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("foedested", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Foedested { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("foedselsaar", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Foedselsaar { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("foedselsdato", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? Foedselsdato { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FoedselINorge
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("foedselsinstitusjonsnavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Foedselsinstitusjonsnavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("rekkefoelgenummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Rekkefoelgenummer { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Folkeregisteridentifikator
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("foedselsEllerDNummer", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string FoedselsEllerDNummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("identifikatortype", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public FolkeregisteridentifikatorIdentifikatortype Identifikatortype { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public FolkeregisteridentifikatorStatus Status { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Folkeregisterperson
    {
        [Newtonsoft.Json.JsonProperty("adressebeskyttelse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GraderingAvAdresse>? Adressebeskyttelse { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("begrensningIRettsligHandleevne", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BegrensningIRettsligHandleevne>? BegrensningIRettsligHandleevne { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("bibehold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BibeholdAvNorskStatsborgerskap>? Bibehold { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("bostedsadresse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Bostedsadresse>? Bostedsadresse { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("brukAvSamiskSpraak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SamiskSpraak>? BrukAvSamiskSpraak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("deltBosted", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<DeltBosted>? DeltBosted { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("doedsfall", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Doedsfall? Doedsfall { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("falskIdentitet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public FalskIdentitet? FalskIdentitet { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("familierelasjon", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Familierelasjon>? Familierelasjon { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("foedsel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Foedsel>? Foedsel { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("foedselINorge", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<FoedselINorge>? FoedselINorge { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("foreldreansvar", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Foreldreansvar>? Foreldreansvar { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("forholdTilSametingetsValgmanntall", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SametingetsValgmanntall>? ForholdTilSametingetsValgmanntall { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("fratattRettsligHandleevne", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<FratattRettsligHandleevne>? FratattRettsligHandleevne { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("identifikasjonsnummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Folkeregisteridentifikator>? Identifikasjonsnummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("identitetsgrunnlag", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Identitetsgrunnlag>? Identitetsgrunnlag { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("innflytting", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<InnflyttingTilNorge>? Innflytting { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kjoenn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Personkjoenn>? Kjoenn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kontaktinformasjonForDoedsbo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<KontaktinformasjonForDoedsbo>? KontaktinformasjonForDoedsbo { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("legitimasjonsdokument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Identifikasjonsdokument>? Legitimasjonsdokument { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("navn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Folkeregisterpersonnavn>? Navn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Opphold>? Opphold { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("oppholdPaaSvalbard", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<OppholdPaaSvalbard>? OppholdPaaSvalbard { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("oppholdsadresse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Oppholdsadresse>? Oppholdsadresse { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("postadresse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Kontaktadresse>? Postadresse { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("postadresseIUtlandet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<KontaktadresseIUtlandet>? PostadresseIUtlandet { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("preferertKontaktadresse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PreferertKontaktadresse>? PreferertKontaktadresse { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("sivilstand", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Sivilstand>? Sivilstand { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("statsborgerskap", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Statsborgerskap>? Statsborgerskap { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Folkeregisterpersonstatus>? Status { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("utenlandskPersonidentifikasjon", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Personidentifikasjon>? UtenlandskPersonidentifikasjon { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("utflytting", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<UtflyttingFraNorge>? Utflytting { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("utlendingsmyndighetenesIdentifikasjonsnummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Personidentifikasjon>? UtlendingsmyndighetenesIdentifikasjonsnummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("vergemaalEllerFremtidsfullmakt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<VergemaalRepresentasjonEllerFremtidsfullmakt>? VergemaalEllerFremtidsfullmakt { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Folkeregisterpersonnavn
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("etternavn", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Etternavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("forkortetNavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ForkortetNavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("fornavn", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Fornavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("mellomnavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Mellomnavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("originaltNavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Personnavn? OriginaltNavn { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Folkeregisterpersonstatus
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public FolkeregisterpersonstatusStatus Status { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Foreldreansvar
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ansvar", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ForeldreansvarAnsvar Ansvar { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ansvarlig", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Ansvarlig { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ansvarligOrganisasjon", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? AnsvarligOrganisasjon { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ansvarligUtenIdentifikator", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RelatertBiPerson? AnsvarligUtenIdentifikator { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ansvarssubjekt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Ansvarssubjekt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ansvarssubjektUtenIdentifikator", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RelatertBiPerson? AnsvarssubjektUtenIdentifikator { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FratattRettsligHandleevne
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GraderingAvAdresse
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("graderingsnivaa", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public GraderingAvAdresseGraderingsnivaa Graderingsnivaa { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Identifikasjonsdokument
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("dokumentkontroll", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public TekniskDokumentkontroll? Dokumentkontroll { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldigFra", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? GyldigFra { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldigTil", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? GyldigTil { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("identifikasjonsdokumentnummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Identifikasjonsdokumentnummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("identifikasjonsdokumenttype", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Identifikasjonsdokumenttype { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("utstederland", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Utstederland { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("utstedernavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Utstedernavn { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class IdentifiserendeInformasjon
    {
        [Newtonsoft.Json.JsonProperty("foedselsdato", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? Foedselsdato { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kjoenn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public IdentifiserendeInformasjonKjoenn? Kjoenn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("personnavn", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Personnavn Personnavn { get; set; } = new Personnavn();

        [Newtonsoft.Json.JsonProperty("statsborgerskap", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Statsborgerskap { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Identitetsgrunnlag
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("identitetsgrunnlagstatus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Identitetsgrunnlagstatus Identitetsgrunnlagstatus { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InnflyttingTilNorge
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("fraflyttingsland", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Fraflyttingsland { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("fraflyttingsstedIUtlandet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? FraflyttingsstedIUtlandet { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InternasjonalAdresse
    {
        [Newtonsoft.Json.JsonProperty("adressenavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Adressenavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("boenhet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Boenhet { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("byEllerStedsnavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ByEllerStedsnavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("bygning", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Bygning { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("coAdressenavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? CoAdressenavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("distriktsnavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Distriktsnavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("etasjenummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Etasjenummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("landkode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Landkode { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("postboks", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Postboks { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("postkode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Postkode { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("region", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Region { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InternasjonalAdresseIFrittFormat
    {
        [Newtonsoft.Json.JsonProperty("adresselinje", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string>? Adresselinje { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("byEllerStedsnavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ByEllerStedsnavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("landkode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Landkode { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("postkode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Postkode { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Kontaktadresse
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adresseIdentifikatorFraMatrikkelen", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? AdresseIdentifikatorFraMatrikkelen { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adressegradering", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public KontaktadresseAdressegradering Adressegradering { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("postadresseIFrittFormat", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PostadresseIFrittFormat? PostadresseIFrittFormat { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("postboksadresse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Postboksadresse? Postboksadresse { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("vegadresse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public VegadresseForPost? Vegadresse { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class KontaktadresseForDoedsbo
    {
        [Newtonsoft.Json.JsonProperty("adresselinje", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Adresselinje { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [Newtonsoft.Json.JsonProperty("landkode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Landkode { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("postnummer", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Postnummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("poststedsnavn", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Poststedsnavn { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class KontaktadresseIUtlandet
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adressegradering", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public KontaktadresseIUtlandetAdressegradering Adressegradering { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("utenlandskAdresse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public InternasjonalAdresse? UtenlandskAdresse { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("utenlandskAdresseIFrittFormat", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public InternasjonalAdresseIFrittFormat? UtenlandskAdresseIFrittFormat { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class KontaktinformasjonForDoedsbo
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adresse", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public KontaktadresseForDoedsbo Adresse { get; set; } = new KontaktadresseForDoedsbo();

        [Newtonsoft.Json.JsonProperty("advokat", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdvokatSomKontakt? Advokat { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("attestutstedelsesdato", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime Attestutstedelsesdato { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("organisasjon", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public OrganisasjonSomKontakt? Organisasjon { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("person", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PersonSomKontakt? Person { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("skifteform", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public KontaktinformasjonForDoedsboSkifteform Skifteform { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Matrikkeladresse
    {
        [Newtonsoft.Json.JsonProperty("adressetilleggsnavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Adressetilleggsnavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("bruksenhetsnummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Bruksenhetsnummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("bruksenhetstype", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public MatrikkeladresseBruksenhetstype? Bruksenhetstype { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("coAdressenavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? CoAdressenavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("matrikkelnummer", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Matrikkelnummer Matrikkelnummer { get; set; } = new Matrikkelnummer();

        [Newtonsoft.Json.JsonProperty("poststed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Poststed? Poststed { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("undernummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Undernummer { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Matrikkelnummer
    {
        [Newtonsoft.Json.JsonProperty("bruksnummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Bruksnummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("festenummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Festenummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gaardsnummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Gaardsnummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kommunenummer", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Kommunenummer { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Opphold
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("oppholdFra", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? OppholdFra { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("oppholdTil", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? OppholdTil { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("oppholdstillatelse", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Oppholdstillatelse Oppholdstillatelse { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class OppholdPaaSvalbard
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("antallTidligereOpphold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? AntallTidligereOpphold { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("antattOppholdsvarighet", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public OppholdPaaSvalbardAntattOppholdsvarighet AntattOppholdsvarighet { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("fraflyttingskommunenummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Fraflyttingskommunenummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("fraflyttingsland", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Fraflyttingsland { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("sluttdato", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? Sluttdato { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("startdato", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime Startdato { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Oppholdsadresse
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adresseIdentifikatorFraMatrikkelen", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? AdresseIdentifikatorFraMatrikkelen { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adressegradering", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public OppholdsadresseAdressegradering Adressegradering { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adressenErUkjent", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AdressenErUkjent { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("matrikkeladresse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Matrikkeladresse? Matrikkeladresse { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("oppholdAnnetSted", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public OppholdsadresseOppholdAnnetSted? OppholdAnnetSted { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("oppholdsadressedato", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? Oppholdsadressedato { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("utenlandskAdresse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public InternasjonalAdresse? UtenlandskAdresse { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("vegadresse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Vegadresse? Vegadresse { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class OrganisasjonSomKontakt
    {
        [Newtonsoft.Json.JsonProperty("kontaktpersonnavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Personnavn? Kontaktpersonnavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("organisasjonsnavn", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Organisasjonsnavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("organisasjonsnummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Organisasjonsnummer { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonSomKontakt
    {
        [Newtonsoft.Json.JsonProperty("foedselsEllerDNummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? FoedselsEllerDNummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("foedselsdato", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? Foedselsdato { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("personnavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Personnavn? Personnavn { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Personidentifikasjon
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("identifikasjonsnummer", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Identifikasjonsnummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("identifikasjonsnummertype", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Identifikasjonsnummertype { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("utstederland", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Utstederland { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Personkjoenn
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kjoenn", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public PersonkjoennKjoenn Kjoenn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Personnavn
    {
        [Newtonsoft.Json.JsonProperty("etternavn", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Etternavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("fornavn", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Fornavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("mellomnavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Mellomnavn { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostadresseIFrittFormat
    {
        [Newtonsoft.Json.JsonProperty("adresselinje", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string>? Adresselinje { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("poststed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Poststed? Poststed { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Postboksadresse
    {
        [Newtonsoft.Json.JsonProperty("postboks", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Postboks { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("postbokseier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Postbokseier { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("poststed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Poststed? Poststed { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Poststed
    {
        [Newtonsoft.Json.JsonProperty("postnummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Postnummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("poststedsnavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Poststedsnavn { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PreferertKontaktadresse
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adressegradering", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public PreferertKontaktadresseAdressegradering? Adressegradering { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kontaktadresseIFrittFormat", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdresseIFrittFormat? KontaktadresseIFrittFormat { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("valg", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public PreferertKontaktadresseValg Valg { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RelatertBiPerson
    {
        [Newtonsoft.Json.JsonProperty("foedselsdato", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? Foedselsdato { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kjoenn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public RelatertBiPersonKjoenn? Kjoenn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("navn", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Personnavn Navn { get; set; } = new Personnavn();

        [Newtonsoft.Json.JsonProperty("statsborgerskap", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Statsborgerskap { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SametingetsValgmanntall
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("forhold", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public SametingetsValgmanntallForhold Forhold { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("vedtaksdato", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime Vedtaksdato { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SamiskSpraak
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("spraak", Required = Newtonsoft.Json.Required.Always, ItemConverterType = typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Spraak> Spraak { get; set; } = new System.Collections.ObjectModel.Collection<Spraak>();

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Sivilstand
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kommune", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kommune { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("myndighet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Myndighet { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("relatertVedSivilstand", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? RelatertVedSivilstand { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("sivilstand", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Sivilstand1 Sivilstand1 { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("sivilstandsdato", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? Sivilstandsdato { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("sted", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Sted { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("utland", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Utland { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Statsborgerskap
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ervervsdato", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? Ervervsdato { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("statsborgerskap", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Statsborgerskap1 { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TekniskDokumentkontroll
    {
        [Newtonsoft.Json.JsonProperty("dokumentkontrollstatus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Dokumentkontrollstatus { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("dokumentkontrolltidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Dokumentkontrolltidspunkt { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UkjentBosted
    {
        [Newtonsoft.Json.JsonProperty("bostedskommune", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Bostedskommune { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UtflyttingFraNorge
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("tilflyttingsland", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Tilflyttingsland { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("tilflyttingsstedIUtlandet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? TilflyttingsstedIUtlandet { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("utflyttingsdato", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? Utflyttingsdato { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Vegadresse
    {
        [Newtonsoft.Json.JsonProperty("adressekode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Adressekode { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adressenavn", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Adressenavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adressenummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Adressenummer? Adressenummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adressetilleggsnavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Adressetilleggsnavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("bruksenhetsnummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Bruksenhetsnummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("bruksenhetstype", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public VegadresseBruksenhetstype? Bruksenhetstype { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("coAdressenavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? CoAdressenavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kommunenummer", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Kommunenummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("poststed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Poststed? Poststed { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class VegadresseForPost
    {
        [Newtonsoft.Json.JsonProperty("adressekode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Adressekode { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adressenavn", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Adressenavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adressenummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Adressenummer? Adressenummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("adressetilleggsnavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Adressetilleggsnavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("bruksenhetsnummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Bruksenhetsnummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("coAdressenavn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? CoAdressenavn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("poststed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Poststed? Poststed { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class VergeRepresentantEllerFullmektig
    {
        [Newtonsoft.Json.JsonProperty("foedselsEllerDNummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? FoedselsEllerDNummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("navn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Personnavn? Navn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("navnFoedselsdato", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IdentifiserendeInformasjon? NavnFoedselsdato { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("omfang", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public VergeRepresentantEllerFullmektigOmfang? Omfang { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("omfangetErInnenPersonligOmraade", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? OmfangetErInnenPersonligOmraade { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("tjenesteomraade", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<VergeTjenesteomraade>? Tjenesteomraade { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class VergeTjenesteomraade
    {
        [Newtonsoft.Json.JsonProperty("vergeTjenesteoppgave", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string VergeTjenesteoppgave { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("vergeTjenestevirksomhet", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string VergeTjenestevirksomhet { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class VergemaalRepresentasjonEllerFremtidsfullmakt
    {
        [Newtonsoft.Json.JsonProperty("aarsak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Aarsak { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("embete", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Embete { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("erGjeldende", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ErGjeldende { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("gyldighetstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gyldighetstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kilde", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Kilde { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("opphoerstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Opphoerstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("verge", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public VergeRepresentantEllerFullmektig Verge { get; set; } = new VergeRepresentantEllerFullmektig();

        [Newtonsoft.Json.JsonProperty("vergemaaltype", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public VergemaalRepresentasjonEllerFremtidsfullmaktVergemaaltype? Vergemaaltype { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonBulkoppslagRequest
    {
        [Newtonsoft.Json.JsonProperty("foedselsEllerDNummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string>? FoedselsEllerDNummer { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Feilmelding
    {
        [Newtonsoft.Json.JsonProperty("feilmelding", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Feilmelding1 { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Oppslag
    {
        [Newtonsoft.Json.JsonProperty("feilmelding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Feilmelding? Feilmelding { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("foedselsEllerDNummer", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string FoedselsEllerDNummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("folkeregisterperson", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Folkeregisterperson? Folkeregisterperson { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonBulkoppslagResponse
    {
        [Newtonsoft.Json.JsonProperty("oppslag", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Oppslag>? Oppslag { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonsoekResponse
    {
        [Newtonsoft.Json.JsonProperty("foedselsEllerDNummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string>? FoedselsEllerDNummer { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Kommunenummer
    {
        [Newtonsoft.Json.JsonProperty("bostedskommunenummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Bostedskommunenummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("oppholdskommunenummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Oppholdskommunenummer { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TilpassetUttrekkJobbRequest
    {
        [Newtonsoft.Json.JsonProperty("doedsaarFraOgMed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? DoedsaarFraOgMed { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("doedsaarTilOgMed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? DoedsaarTilOgMed { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("foedselsaarFraOgMed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? FoedselsaarFraOgMed { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("foedselsaarTilOgMed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? FoedselsaarTilOgMed { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kjoenn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public TilpassetUttrekkJobbRequestKjoenn? Kjoenn { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("kommunenummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Kommunenummer? Kommunenummer { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("personstatustyper", Required = Newtonsoft.Json.Required.Always, ItemConverterType = typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Personstatustyper> Personstatustyper { get; set; } = new System.Collections.ObjectModel.Collection<Personstatustyper>();

        [Newtonsoft.Json.JsonProperty("sivilstandstype", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public TilpassetUttrekkJobbRequestSivilstandstype? Sivilstandstype { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("statsborgerskap", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Statsborgerskap { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UttrekkDataResponse
    {
        [Newtonsoft.Json.JsonProperty("dokumentidentifikator", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string>? Dokumentidentifikator { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("feilmelding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Feilmelding { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("foedselsEllerDNummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string>? FoedselsEllerDNummer { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UttrekkJobbResponse
    {
        [Newtonsoft.Json.JsonProperty("feilmelding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Feilmelding { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("jobbId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? JobbId { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FolkeregisterFeilmelding
    {
        [Newtonsoft.Json.JsonProperty("alvorlighetsgrad", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Alvorlighetsgrad { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("feilkode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Feilkode { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("feilmelding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Feilmelding { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("httpStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? HttpStatus { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("tilleggsinformasjon", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.IDictionary<string, string>? Tilleggsinformasjon { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LagretTynnHendelse
    {
        [Newtonsoft.Json.JsonProperty("hendelse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public TynnHendelse? Hendelse { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("sekvensnummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Sekvensnummer { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TynnHendelse
    {
        [Newtonsoft.Json.JsonProperty("ajourholdstidspunkt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ajourholdstidspunkt { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("folkeregisteridentifikator", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Folkeregisteridentifikator { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("hendelsetype", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Hendelsetype { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Sekvensnummer
    {
        [Newtonsoft.Json.JsonProperty("sekvensnummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Sekvensnummer1 { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ErrorMessageForExternalUsers
    {
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Code { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("feilreferanse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Feilreferanse { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("httpStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? HttpStatus { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("message", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Message { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum BibeholdAvNorskStatsborgerskapBibeholdstatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"harBibehold")]
        HarBibehold = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"harIkkeLengerBibehold")]
        HarIkkeLengerBibehold = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"norskStatsborgerTrengerIkkeBibehold")]
        NorskStatsborgerTrengerIkkeBibehold = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum BostedsadresseAdressegradering
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ugradert")]
        Ugradert = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"klientadresse")]
        Klientadresse = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"fortrolig")]
        Fortrolig = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"strengtFortrolig")]
        StrengtFortrolig = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum DeltBostedAdressegradering
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ugradert")]
        Ugradert = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"klientadresse")]
        Klientadresse = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"fortrolig")]
        Fortrolig = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"strengtFortrolig")]
        StrengtFortrolig = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum FamilierelasjonMinRolleForPerson
    {

        [System.Runtime.Serialization.EnumMember(Value = @"mor")]
        Mor = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"far")]
        Far = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"medmor")]
        Medmor = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"barn")]
        Barn = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"soesken")]
        Soesken = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"ektefelleEllerPartner")]
        EktefelleEllerPartner = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"doedfoedtBarn")]
        DoedfoedtBarn = 6,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum FamilierelasjonRelatertPersonsRolle
    {

        [System.Runtime.Serialization.EnumMember(Value = @"mor")]
        Mor = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"far")]
        Far = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"medmor")]
        Medmor = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"barn")]
        Barn = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"soesken")]
        Soesken = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"ektefelleEllerPartner")]
        EktefelleEllerPartner = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"doedfoedtBarn")]
        DoedfoedtBarn = 6,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum FolkeregisteridentifikatorIdentifikatortype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"foedselsnummer")]
        Foedselsnummer = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"dNummer")]
        DNummer = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum FolkeregisteridentifikatorStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"iBruk")]
        IBruk = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"opphoert")]
        Opphoert = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum FolkeregisterpersonstatusStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"aktiv")]
        Aktiv = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"bosatt")]
        Bosatt = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"utflyttet")]
        Utflyttet = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"forsvunnet")]
        Forsvunnet = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"doed")]
        Doed = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"opphoert")]
        Opphoert = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"foedselsregistrert")]
        Foedselsregistrert = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"midlertidig")]
        Midlertidig = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"inaktiv")]
        Inaktiv = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"ikkeBosatt")]
        IkkeBosatt = 9,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ForeldreansvarAnsvar
    {

        [System.Runtime.Serialization.EnumMember(Value = @"felles")]
        Felles = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"mor")]
        Mor = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"far")]
        Far = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"medmor")]
        Medmor = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"andre")]
        Andre = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"ukjent")]
        Ukjent = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum GraderingAvAdresseGraderingsnivaa
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ugradert")]
        Ugradert = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"klientadresse")]
        Klientadresse = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"fortrolig")]
        Fortrolig = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"strengtFortrolig")]
        StrengtFortrolig = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum IdentifiserendeInformasjonKjoenn
    {

        [System.Runtime.Serialization.EnumMember(Value = @"kvinne")]
        Kvinne = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"mann")]
        Mann = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Identitetsgrunnlagstatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ingenStatus")]
        IngenStatus = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ikkeKontrollert")]
        IkkeKontrollert = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"kontrollert")]
        Kontrollert = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum KontaktadresseAdressegradering
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ugradert")]
        Ugradert = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"klientadresse")]
        Klientadresse = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"fortrolig")]
        Fortrolig = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"strengtFortrolig")]
        StrengtFortrolig = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum KontaktadresseIUtlandetAdressegradering
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ugradert")]
        Ugradert = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"klientadresse")]
        Klientadresse = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"fortrolig")]
        Fortrolig = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"strengtFortrolig")]
        StrengtFortrolig = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum KontaktinformasjonForDoedsboSkifteform
    {

        [System.Runtime.Serialization.EnumMember(Value = @"offentlig")]
        Offentlig = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"annet")]
        Annet = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum MatrikkeladresseBruksenhetstype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"bolig")]
        Bolig = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"annetEnnBolig")]
        AnnetEnnBolig = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"fritidsbolig")]
        Fritidsbolig = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"ikkeGodkjentBolig")]
        IkkeGodkjentBolig = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"unummerertBruksenhet")]
        UnummerertBruksenhet = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Oppholdstillatelse
    {

        [System.Runtime.Serialization.EnumMember(Value = @"midlertidig")]
        Midlertidig = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"permanent")]
        Permanent = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"opplysningMangler")]
        OpplysningMangler = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum OppholdPaaSvalbardAntattOppholdsvarighet
    {

        [System.Runtime.Serialization.EnumMember(Value = @"underSeksMaaneder")]
        UnderSeksMaaneder = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"overSeksMaaneder")]
        OverSeksMaaneder = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"overTolvMaaneder")]
        OverTolvMaaneder = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"ukjent")]
        Ukjent = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum OppholdsadresseAdressegradering
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ugradert")]
        Ugradert = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"klientadresse")]
        Klientadresse = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"fortrolig")]
        Fortrolig = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"strengtFortrolig")]
        StrengtFortrolig = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum OppholdsadresseOppholdAnnetSted
    {

        [System.Runtime.Serialization.EnumMember(Value = @"militaer")]
        Militaer = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"utenriks")]
        Utenriks = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"paaSvalbard")]
        PaaSvalbard = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"pendler")]
        Pendler = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum PersonkjoennKjoenn
    {

        [System.Runtime.Serialization.EnumMember(Value = @"kvinne")]
        Kvinne = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"mann")]
        Mann = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum PreferertKontaktadresseAdressegradering
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ugradert")]
        Ugradert = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"klientadresse")]
        Klientadresse = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"fortrolig")]
        Fortrolig = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"strengtFortrolig")]
        StrengtFortrolig = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum PreferertKontaktadresseValg
    {

        [System.Runtime.Serialization.EnumMember(Value = @"bostedsadresse")]
        Bostedsadresse = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"oppholdsadresse")]
        Oppholdsadresse = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"postadresse")]
        Postadresse = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"postadresseIUtlandet")]
        PostadresseIUtlandet = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum RelatertBiPersonKjoenn
    {

        [System.Runtime.Serialization.EnumMember(Value = @"kvinne")]
        Kvinne = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"mann")]
        Mann = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum SametingetsValgmanntallForhold
    {

        [System.Runtime.Serialization.EnumMember(Value = @"innmeldt")]
        Innmeldt = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"utmeldt")]
        Utmeldt = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"aldriInnmeldt")]
        AldriInnmeldt = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Spraak
    {

        [System.Runtime.Serialization.EnumMember(Value = @"nordsamisk")]
        Nordsamisk = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"soersamisk")]
        Soersamisk = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"lulesamisk")]
        Lulesamisk = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Sivilstand1
    {

        [System.Runtime.Serialization.EnumMember(Value = @"uoppgitt")]
        Uoppgitt = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ugift")]
        Ugift = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"gift")]
        Gift = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"enkeEllerEnkemann")]
        EnkeEllerEnkemann = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"skilt")]
        Skilt = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"separert")]
        Separert = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"registrertPartner")]
        RegistrertPartner = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"separertPartner")]
        SeparertPartner = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"skiltPartner")]
        SkiltPartner = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"gjenlevendePartner")]
        GjenlevendePartner = 9,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum VegadresseBruksenhetstype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"bolig")]
        Bolig = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"annetEnnBolig")]
        AnnetEnnBolig = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"fritidsbolig")]
        Fritidsbolig = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"ikkeGodkjentBolig")]
        IkkeGodkjentBolig = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"unummerertBruksenhet")]
        UnummerertBruksenhet = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum VergeRepresentantEllerFullmektigOmfang
    {

        [System.Runtime.Serialization.EnumMember(Value = @"utlendingssakerPersonligeOgOekonomiskeInteresser")]
        UtlendingssakerPersonligeOgOekonomiskeInteresser = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"personligeOgOekonomiskeInteresser")]
        PersonligeOgOekonomiskeInteresser = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"oekonomiskeInteresser")]
        OekonomiskeInteresser = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"personligeInteresser")]
        PersonligeInteresser = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum VergemaalRepresentasjonEllerFremtidsfullmaktVergemaaltype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ensligMindreaarigAsylsoeker")]
        EnsligMindreaarigAsylsoeker = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ensligMindreaarigFlyktning")]
        EnsligMindreaarigFlyktning = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"voksen")]
        Voksen = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"midlertidigForVoksen")]
        MidlertidigForVoksen = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"mindreaarig")]
        Mindreaarig = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"midlertidigForMindreaarig")]
        MidlertidigForMindreaarig = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"forvaltningUtenforVergemaal")]
        ForvaltningUtenforVergemaal = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"stadfestetFremtidsfullmakt")]
        StadfestetFremtidsfullmakt = 7,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum TilpassetUttrekkJobbRequestKjoenn
    {

        [System.Runtime.Serialization.EnumMember(Value = @"kvinne")]
        Kvinne = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"mann")]
        Mann = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Personstatustyper
    {

        [System.Runtime.Serialization.EnumMember(Value = @"aktiv")]
        Aktiv = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"bosatt")]
        Bosatt = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"utflyttet")]
        Utflyttet = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"doed")]
        Doed = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"inaktiv")]
        Inaktiv = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum TilpassetUttrekkJobbRequestSivilstandstype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"uoppgitt")]
        Uoppgitt = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ugift")]
        Ugift = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"gift")]
        Gift = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"enkeEllerEnkemann")]
        EnkeEllerEnkemann = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"skilt")]
        Skilt = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"separert")]
        Separert = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"registrertPartner")]
        RegistrertPartner = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"separertPartner")]
        SeparertPartner = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"skiltPartner")]
        SkiltPartner = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"gjenlevendePartner")]
        GjenlevendePartner = 9,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    internal class DateFormatConverter : Newtonsoft.Json.Converters.IsoDateTimeConverter
    {
        public DateFormatConverter()
        {
            DateTimeFormat = "yyyy-MM-dd";
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FileResponse : System.IDisposable
    {
        private System.IDisposable? _client;
        private System.IDisposable? _response;

        public int StatusCode { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public System.IO.Stream Stream { get; private set; }

        public bool IsPartial
        {
            get { return StatusCode == 206; }
        }

        public FileResponse(int statusCode, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.IO.Stream stream, System.IDisposable? client, System.IDisposable? response)
        {
            StatusCode = statusCode;
            Headers = headers;
            Stream = stream;
            _client = client;
            _response = response;
        }

        public void Dispose()
        {
            Stream.Dispose();
            if (_response != null)
                _response.Dispose();
            if (_client != null)
                _client.Dispose();
        }
    }


    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApiException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string? Response { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public ApiException(string message, int statusCode, string? response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception? innerException)
            : base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + ((response == null) ? "(null)" : response.Substring(0, response.Length >= 512 ? 512 : response.Length)), innerException)
        {
            StatusCode = statusCode;
            Response = response;
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApiException<TResult> : ApiException
    {
        public TResult Result { get; private set; }

        public ApiException(string message, int statusCode, string? response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception? innerException)
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603
#pragma warning restore 8604
